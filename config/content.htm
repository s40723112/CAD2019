<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>SolveSpace</h1>
<h2>編譯</h2>
<p><br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/-R7h05Q_22I" width="560"></iframe><br/><br/></p>
<h4>在about增加學號</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/CotCUNAlOfM" width="560"></iframe></p>
<h2>繪圖示範</h2>
<h4>A Simple Plate</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/V9MsuFDCwK8" width="560"></iframe></p>
<h4>零件18</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/y5uVrumE9ug" width="560"></iframe></p>
<h2>自走車繪製</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/or6XCbx8KoQ" width="560"></iframe></p>
<h1>V-rep</h1>
<h2>雙輪車控制模擬</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/IvudFTzezIY" width="560"></iframe></p>
<h1>期末任務</h1>
<h2>W15</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/nYxOM707zXc" width="560"></iframe></p>
<p></p>
<h2>W16</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/OBw_NQzfFXg" width="560"></iframe></p>
<p></p>
<h2>W17</h2>
<h3>任務一</h3>
<h4><span>Create A Ball</span>(創建一個球)</h4>
<p><strong><span>Hands-on #4:</span></strong><span><span> </span>In the scene tree view, select the last node and press the Add button. In the dialog, open the Bases nodes section and select the Solid node. In the scene tree view, expand the Solid node and select its children field. Add a Shape node to it by using the Add button. Select the appearance field of the Shape node and use the Add button to add a PBRAppearance node.</span></p>
<p><span>1.Add a Sphere node as the geometry field of the newly created Shape node.</span><br/><span>2.Expand the PBRAppearance node and change its metalness field to 0 and its roughness field to 1.</span><br/><span>3.Add another Sphere node to the boundingObject field of the Solid.</span><br/><span>4.Finally add a Physics node to the physics field of the Solid.</span><br/><span>5.By modifying the translation field of the Solid node, place the ball in front of the robot (at {0, 0.2, -0.2} for example).</span><br/><span>6.Save the simulation.</span><br/><span>7.The result is depicted in this figure.</span></p>
<p></p>
<p>步驟#4:在場景視圖中，選擇最後一個節點並且按"ADD"鈕，在對話框裡打開"基礎"節點(Bases nodes)，接著選擇"實體"節點(Solid node)。</p>
<p>在場景視圖中，展開"實體"節點(Solid node)，然後選擇子字段(children field)，按"ADD"新增一個"形狀"節點，選擇形狀節點中的外觀字段，<br/>接著按"ADD" 鈕 新增一個"PBRAppearance"節點。</p>
<p>1.新增一個球體節點(Sphere node)作為新建的形狀節點的幾何字段。<br/>2.展開PBRAppearance節點，並且將金屬字段設定0，接著粗糙度字段設定1。<br/>3.新建另一個球體節點(Sphere node)，並添加到實體的 boundingObject 字段。<br/>4.最後，新增一個Physics節點到實體中的Physical字段。<br/>5.修該時體節點的平移字段，把球放在機器人面前(例如:在座標[0,0.2,-0.2])。<br/>6.儲存模擬。<br/>7.結果如圖所示。</p>
<p><img alt="" height="845" src="https://s40723148.github.io/cad2019ag1/images/tutorial_ball.png" width="1485"/></p>
<h4><br/><span>Geometries</span>(幾何形狀)</h4>
<p><strong><span>Hands-on #5:</span></strong><span><span> </span>For each Sphere node defining the ball, set its radius field to 0.05 and its subdivision field to 2. Refer to the Reference Manual to understand what the subdivision field stands for.</span></p>
<p>步驟#5:定義每個球體節點，將半徑字段設置為0.05，並且把細分(subdivision)字段設定為2，請查閱《參考手冊》了解細分字段的意義。</p>
<h3>任務二</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/DU0ptKz9mXQ" width="560"></iframe></p>
<h1>期末報告</h1>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/569IN8vSt6g" width="560"></iframe></p>